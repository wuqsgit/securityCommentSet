<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht70605.dao.ReturnobjectMapper">
    <resultMap id="BaseResultMap" type="com.ht70605.entity.Returnobject">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="dictionary_id" jdbcType="VARCHAR" property="dictionaryId"/>
        <result column="application_id" jdbcType="VARCHAR" property="applicationId"/>
        <result column="department_id" jdbcType="VARCHAR" property="departmentId"/>
        <result column="rec_department_id" jdbcType="VARCHAR" property="recDepartmentId"/>
        <result column="result" jdbcType="VARCHAR" property="result"/>
        <result column="sysUser_id" jdbcType="VARCHAR" property="sysuserId"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="ret_time" jdbcType="VARCHAR" property="retTime"/>
        <result column="checkInBill_id" jdbcType="VARCHAR" property="checkInBillId"/>
        <result column="checkOutBill_id" jdbcType="VARCHAR" property="checkOutBillId"/>
        <result column="location_id" jdbcType="VARCHAR" property="locationId"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, dictionary_id, application_id, department_id, rec_department_id, result, sysUser_id,
        create_time, update_time, status, ret_time,checkInBill_id,checkOutBill_id,info,location_id,info
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from returnobject
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from returnobject
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.ht70605.entity.Returnobject">
        insert into returnobject (id, dictionary_id, application_id,
        department_id, rec_department_id, result,
        sysUser_id, create_time, update_time,location_id,
        status)
        values (#{id,jdbcType=VARCHAR}, #{dictionaryId,jdbcType=VARCHAR}, #{applicationId,jdbcType=VARCHAR},
        #{departmentId,jdbcType=VARCHAR}, #{recDepartmentId,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR},
        #{sysuserId,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR},#{locationId,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ht70605.entity.Returnobject">
        insert into returnobject
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dictionaryId != null">
                dictionary_id,
            </if>
            <if test="applicationId != null">
                application_id,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="recDepartmentId != null">
                rec_department_id,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="sysuserId != null">
                sysUser_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="retTime != null">
                ret_time,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="dictionaryId != null">
                #{dictionaryId,jdbcType=VARCHAR},
            </if>
            <if test="applicationId != null">
                #{applicationId,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=VARCHAR},
            </if>
            <if test="recDepartmentId != null">
                #{recDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
            <if test="sysuserId != null">
                #{sysuserId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="retTime != null">
                #{retTime,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ht70605.entity.Returnobject">
        update returnobject
        <set>
            <if test="dictionaryId != null">
                dictionary_id = #{dictionaryId,jdbcType=VARCHAR},
            </if>
            <if test="applicationId != null">
                application_id = #{applicationId,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=VARCHAR},
            </if>
            <if test="recDepartmentId != null">
                rec_department_id = #{recDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
            <if test="sysuserId != null">
                sysUser_id = #{sysuserId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="checkInBillId != null">
                checkInBill_id = #{checkInBillId,jdbcType=VARCHAR},
            </if>
            <if test="checkOutBillId != null">
                checkOutBill_id = #{checkOutBillId,jdbcType=VARCHAR},
            </if>
            <if test="retTime != null">
                ret_time = #{retTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ht70605.entity.Returnobject">
        update returnobject
        set dictionary_id = #{dictionaryId,jdbcType=VARCHAR},
        application_id = #{applicationId,jdbcType=VARCHAR},
        department_id = #{departmentId,jdbcType=VARCHAR},
        rec_department_id = #{recDepartmentId,jdbcType=VARCHAR},
        result = #{result,jdbcType=VARCHAR},
        sysUser_id = #{sysuserId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        location_id = #{locationId,jdbcType=VARCHAR},
        info = #{info,jdbcType=VARCHAR},
        checkInBill_id = #{checkInBillId,jdbcType=VARCHAR},
        checkOutBill_id = #{checkOutBillId,jdbcType=VARCHAR},
        ret_time = #{retTime,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <resultMap id="BaseResultMapSelect" type="com.ht70605.entity.ReturnobjectSelect" extends="BaseResultMap">
        <result column="departmentName" jdbcType="VARCHAR" property="departmentName"/>
        <result column="applicationName" jdbcType="VARCHAR" property="applicationName"/>
        <result column="locInfo" jdbcType="VARCHAR" property="locInfo"/>
        <result column="value" jdbcType="VARCHAR" property="dictionaryValue"/>
        <result column="sysuserName" jdbcType="VARCHAR" property="sysuserName"/>
        <result column="completeNum" jdbcType="VARCHAR" property="completeNum"/>
        <result column="noncompleteNum" jdbcType="VARCHAR" property="noncompleteNum"/>
        <result column="month" jdbcType="VARCHAR" property="month"/>
        <result column="proCode" jdbcType="VARCHAR" property="proCode"/>
        <result column="serNum" jdbcType="VARCHAR" property="serNum"/>
        <result column="dictionaryValue" jdbcType="VARCHAR" property="dictionaryValue"/>
        <result column="rfidCode" jdbcType="VARCHAR" property="rfidCode"/>
        <result column="model" jdbcType="VARCHAR" property="model" />
    </resultMap>
    <!--模糊查询 -->
    <select id="selectjys" parameterType="page" resultMap="BaseResultMapSelect">
        SELECT
        dep.dep_name AS departmentName,
        app.name AS applicationName,
        dic.value as value,
        sys.name AS sysuserName,
        r.id,
        r.create_time,
        r.ret_time,
        r.status,
        r.result,
        r.info,
        r.department_id,
        r.application_id,
        r.dictionary_id,
        r.location_id AS locationId,
        pro.pro_code AS proCode,
        pro.model,
        pro.ser_num AS serNum,
        pro.rfid_code AS rfidCode,
        dic.value AS dictionaryValue
        FROM returnobject r
        LEFT JOIN department dep ON r.department_id = dep.id
        LEFT JOIN application app ON r.application_id = app.id
        LEFT JOIN dictionary dic ON r.department_id = dic.id
        RIGHT JOIN returnobjectitem ritem ON r.id = ritem.returnObject_id
        RIGHT JOIN
        (SELECT *
        from
        (select * from
        (select id,rfid_code,dictionary_id,location_id,create_time,info,model,pro_code,ser_num,sysUser_id,application_id,level

        from product where product_id  is null or  product_id not in
        (SELECT id
        FROM
        product where product.product_id is null
        ))as p0
        union all
        (select p1.id,p1.rfid_code,p1.dictionary_id,p1.location_id,
        p1.create_time,p1.info,p2.model,p2.pro_code,p2.ser_num,p2.sysUser_id,
        p2.application_id as application_id,p1.level

        from
        (select * from product where product_id is not null)as p1
        inner join product as p2 on p1.product_id=p2.id))as p3)pro ON pro.id = ritem.product_id
        LEFT JOIN sysuser sys ON r.sysUser_id = sys.id
        <where>
            r.id is not null
            <if test="paramEntity.id!=null">AND r.id = #{paramEntity.id}
            </if>
            <if test="paramEntity.status!=null and paramEntity.status!=''">AND r.status = #{paramEntity.status}
            </if>
            <if test="paramEntity.creatStartTime!=null and paramEntity.creatStartTime!=''">and
                left(r.create_time, 10)>=#{paramEntity.creatStartTime}
            </if>
            <if test="paramEntity.createEndTime!=null and paramEntity.createEndTime!=''">and
                #{paramEntity.createEndTime}>=left(r.create_time, 10)
            </if>
            <if test="paramEntity.retStartTime!=null and paramEntity.retStartTime!=''">and
                left(r.ret_time, 10)>=#{paramEntity.retStartTime}
            </if>
            <if test="paramEntity.retEndtime!=null and paramEntity.retEndtime!=''">and
                #{paramEntity.retEndtime}>=left(i.ret_time, 10)
            </if>
            <if test="paramEntity.info!=null and paramEntity.info!=''">
                AND r.info like concat(concat('%',#{paramEntity.info}),'%')
            </if>
            <if test="paramEntity.retTime!=null">AND MONTH(r.ret_Time) = #{paramEntity.retTime}
            </if>
            <if test="paramEntity.creatTime!=null">AND MONTH(r.create_Time) = #{paramEntity.creatTime}
            </if>

        </where>
        <if test="paramEntity.searchUser==null">
            GROUP BY r.id
        </if>
        <if test="paramEntity.status==2">
            ORDER BY r.ret_Time DESC
        </if>
        <if test="paramEntity.status==1">
            ORDER BY r.create_Time DESC
        </if>
        <if test="pageSize!=null">limit #{start},#{pageSize}
        </if>
    </select>

    <select id="selectPageListUseDyc" parameterType="page" resultMap="BaseResultMapSelect">
        SELECT
        dep.dep_name AS departmentName,
        app.name AS applicationName,
        dic.value,
        sys.name AS sysuserName,
        r.id,
        r.create_time,
        r.ret_time,
        r.status,
        r.result,
        r.info,
        r.department_id,
        r.application_id,
        r.dictionary_id,
        l.locInfo AS locInfo,
        r.location_id
        FROM returnobject r
        LEFT JOIN department dep ON r.department_id = dep.id
        LEFT JOIN application app ON r.application_id = app.id
        LEFT JOIN dictionary dic ON r.dictionary_id = dic.id
        LEFT JOIN sysuser sys ON r.sysUser_id = sys.id
        LEFT JOIN location l ON l.id = r.location_id
        <where>
            <if test="paramEntity.status!=null and paramEntity.status!=''">AND r.status = #{paramEntity.status}
            </if>
            <if test="paramEntity.departmentId!=null and paramEntity.departmentId!=''">AND r.department_id like concat(concat('%',#{paramEntity.departmentId}),'%')
            </if>
            <if test="paramEntity.creatStartTime!=null and paramEntity.creatStartTime!=''">and
                left(r.create_time, 10)>=#{paramEntity.creatStartTime}
            </if>
            <if test="paramEntity.createEndTime!=null and paramEntity.createEndTime!=''">and
                #{paramEntity.createEndTime}>=left(r.create_time, 10)
            </if>
            <if test="paramEntity.retStartTime!=null and paramEntity.retStartTime!=''">and
                left(r.ret_time, 10)>=#{paramEntity.retStartTime}
            </if>
            <if test="paramEntity.retEndtime!=null and paramEntity.retEndtime!=''">and
                #{paramEntity.retEndtime}>=left(i.ret_time, 10)
            </if>
            <if test="paramEntity.info!=null and paramEntity.info!=''">and
                AND r.info like concat(concat('%',#{paramEntity.info}),'%')
            </if>
            <if test="paramEntity.retTime!=null">AND MONTH(r.retTime) = #{paramEntity.retTime}
            </if>
            <if test="paramEntity.creatTime!=null">AND MONTH(r.creatTime) = #{paramEntity.creatTime}
            </if>
            <if test="paramEntity.deptId!=null and paramEntity.deptId!=''">
                AND sys.department_id =#{paramEntity.deptId}
            </if>
        </where>
        ORDER BY r.create_time DESC
        <if test="pageSize!=null">limit #{start},#{pageSize}
        </if>
    </select>

    <select id="selectPageCountListUseDyc" parameterType="page" resultType="Integer">
        SELECT
        count(1)
        FROM returnobject r
        LEFT JOIN department dep ON r.department_id = dep.id
        LEFT JOIN application app ON r.application_id = app.id
        LEFT JOIN dictionary dic ON r.dictionary_id = dic.id
        LEFT JOIN sysuser sys ON r.sysUser_id = sys.id
        LEFT JOIN location l ON l.id = r.location_id
        <where>
            <if test="paramEntity.status!=null and paramEntity.status!=''">AND r.status = #{paramEntity.status}
            </if>
            <if test="paramEntity.departmentId!=null and paramEntity.departmentId!=''">AND r.department_id like concat(concat('%',#{paramEntity.departmentId}),'%')
            </if>
            <if test="paramEntity.creatStartTime!=null and paramEntity.creatStartTime!=''">and
                left(r.create_time, 10)>=#{paramEntity.creatStartTime}
            </if>
            <if test="paramEntity.createEndTime!=null and paramEntity.createEndTime!=''">and
                #{paramEntity.createEndTime}>=left(r.create_time, 10)
            </if>
            <if test="paramEntity.retStartTime!=null and paramEntity.retStartTime!=''">and
                left(r.ret_time, 10)>=#{paramEntity.retStartTime}
            </if>
            <if test="paramEntity.retEndtime!=null and paramEntity.retEndtime!=''">and
                #{paramEntity.retEndtime}>=left(i.ret_time, 10)
            </if>
            <if test="paramEntity.info!=null and paramEntity.info!=''">and
                AND r.info like concat(concat('%',#{paramEntity.info}),'%')
            </if>
            <if test="paramEntity.retTime!=null">AND MONTH(r.retTime) = #{paramEntity.retTime}
            </if>
            <if test="paramEntity.creatTime!=null">AND MONTH(r.creatTime) = #{paramEntity.creatTime}
            </if>
            <if test="paramEntity.deptId!=null and paramEntity.deptId!=''">
                AND sys.department_id =#{paramEntity.deptId}
            </if>
        </where>
        ORDER BY r.create_time DESC
    </select>
    <!--模糊查询条数 -->
    <select id="selectPageCountUseDyc" parameterType="page" resultType="Integer">
        SELECT COUNT(*) FROM
        (SELECT DISTINCT
        r.id
        FROM returnobject r LEFT JOIN department dep ON r.sysUserID = dep.sysUser_id
        LEFT JOIN application app ON r.applicationID = app.id
        LEFT JOIN dictionary dic ON r.dictionaryID = dic.id
        LEFT JOIN sysuser sys ON r.sysUserID = sys.id
        <where>
            <if test="paramEntity.status!=null">AND r.status like concat(concat('%',#{paramEntity.status}),'%')
            </if>
            <if test="paramEntity.startTime!=null and paramEntity.startTime!=''">and
                unix_timestamp(r.creatTime)>=unix_timestamp(#{paramEntity.startTime})
            </if>
            <if test="paramEntity.endTime!=null and paramEntity.endTime!=''">and
                unix_timestamp(#{paramEntity.endTime})>=unix_timestamp(r.creatTime)
            </if>
        </where>
        ) AS t
    </select>

    <!--查询已完成清退 -->
    <select id="selectReturnComNum" parameterType="page" resultMap="BaseResultMapSelect">
        SELECT MONTH(i.ret_Time) as month,COUNT(i.id) as completeNum
        FROM returnobject as i
        LEFT OUTER JOIN sysuser as su ON i.sysUser_id = su.id
        LEFT OUTER JOIN department as dp ON su.id = dp.sysUser_id
        <where>
            i.status = 2
            AND YEAR(i.ret_Time) = YEAR(NOW())
            <!--<if test="paramEntity.deptid!=null">AND i.department_id = #{paramEntity.deptid}-->
            <!--</if>-->
        </where>
        GROUP BY MONTH(i.ret_Time)
    </select>

    <select id="selectReturnobjectSelectByCheckInBill" parameterType="java.lang.String" resultMap="BaseResultMapSelect">
        select
        r.*
        from returnobject r
        where r.checkInBill_id = #{checkinBill,jdbcType=VARCHAR}
    </select>

    <!--查询未完成清退 -->
    <select id="selectReturnNonComNum" parameterType="page" resultMap="BaseResultMapSelect">
        SELECT MONTH(i.create_Time) as month,COUNT(i.id) as noncompleteNum
        FROM returnobject as i
        LEFT OUTER JOIN sysuser as su ON i.sysUser_id = su.id
        LEFT OUTER JOIN department as dp ON su.id = dp.sysUser_id
        <where>
            i.status = 1
            AND YEAR(i.create_Time) = YEAR(NOW())
            <!--<if test="paramEntity.deptid!=null">AND i.department_id = #{paramEntity.deptid}-->
            <!--</if>-->
        </where>
        GROUP BY MONTH(i.create_Time)

    </select>


    <delete id="deleteList">
        delete from returnobject where id in
        <foreach collection="array" open="(" close=")" separator="," item="pk">
            #{pk}
        </foreach>
    </delete>

</mapper>