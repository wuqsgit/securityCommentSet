<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht70605.dao.BoxinfoMapper">
    <resultMap id="BaseResultMap" type="com.ht70605.entity.Boxinfo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="box_rfid_code" jdbcType="VARCHAR" property="boxRfidCode"/>
        <result column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, box_rfid_code, product_id, create_time, update_time, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from boxinfo
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from boxinfo
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.ht70605.entity.Boxinfo">
        insert into boxinfo (id, box_rfid_code, product_id,
        create_time, update_time, status
        )
        values (#{id,jdbcType=VARCHAR}, #{boxRfidCode,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR},
        #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ht70605.entity.Boxinfo">
        insert into boxinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="boxRfidCode != null">
                box_rfid_code,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="boxRfidCode != null">
                #{boxRfidCode,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ht70605.entity.Boxinfo">
        update boxinfo
        <set>
            <if test="boxRfidCode != null">
                box_rfid_code = #{boxRfidCode,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ht70605.entity.Boxinfo">
        update boxinfo
        set box_rfid_code = #{boxRfidCode,jdbcType=VARCHAR},
        product_id = #{productId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>