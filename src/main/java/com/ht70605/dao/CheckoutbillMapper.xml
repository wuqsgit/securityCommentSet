<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht70605.dao.CheckoutbillMapper">
    <resultMap id="BaseResultMap" type="com.ht70605.entity.Checkoutbill">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="dictionary_id" jdbcType="VARCHAR" property="dictionaryId"/>
        <result column="bill_code" jdbcType="VARCHAR" property="billCode"/>
        <result column="res_department_id" jdbcType="VARCHAR" property="resDepartmentId"/>
        <result column="des_department_id" jdbcType="VARCHAR" property="desDepartmentId"/>
        <result column="result" jdbcType="VARCHAR" property="result"/>
        <result column="person_name" jdbcType="VARCHAR" property="personName"/>
        <result column="info" jdbcType="VARCHAR" property="info"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="sysuser_id" jdbcType="VARCHAR" property="sysuserId"/>
        <result column="location_id" jdbcType="VARCHAR" property="locationId"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, dictionary_id, bill_code, res_department_id, des_department_id, result, person_name,
        info, create_time, update_time, status, sysuser_id, location_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from checkoutbill
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getCheckoutBillByBillCodeAndDeptId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from checkoutbill
        where bill_code = #{billCode,jdbcType=VARCHAR} and res_department_id = #{resDeptId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from checkoutbill
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.ht70605.entity.Checkoutbill">
        insert into checkoutbill (id, dictionary_id, bill_code,
        res_department_id, des_department_id, result,
        person_name, info, create_time,
        update_time, status, sysuser_id,
        location_id)
        values (#{id,jdbcType=VARCHAR}, #{dictionaryId,jdbcType=VARCHAR}, #{billCode,jdbcType=VARCHAR},
        #{resDepartmentId,jdbcType=VARCHAR}, #{desDepartmentId,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR},
        #{personName,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
        #{updateTime,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{sysuserId,jdbcType=VARCHAR},
        #{locationId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ht70605.entity.Checkoutbill">
        insert into checkoutbill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dictionaryId != null">
                dictionary_id,
            </if>
            <if test="billCode != null">
                bill_code,
            </if>
            <if test="resDepartmentId != null">
                res_department_id,
            </if>
            <if test="desDepartmentId != null">
                des_department_id,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="personName != null">
                person_name,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sysuserId != null">
                sysuser_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="dictionaryId != null">
                #{dictionaryId,jdbcType=VARCHAR},
            </if>
            <if test="billCode != null">
                #{billCode,jdbcType=VARCHAR},
            </if>
            <if test="resDepartmentId != null">
                #{resDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="desDepartmentId != null">
                #{desDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
            <if test="personName != null">
                #{personName,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="sysuserId != null">
                #{sysuserId,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ht70605.entity.Checkoutbill">
        update checkoutbill
        <set>
            <if test="dictionaryId != null">
                dictionary_id = #{dictionaryId,jdbcType=VARCHAR},
            </if>
            <if test="billCode != null">
                bill_code = #{billCode,jdbcType=VARCHAR},
            </if>
            <if test="resDepartmentId != null">
                res_department_id = #{resDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="desDepartmentId != null">
                des_department_id = #{desDepartmentId,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
            <if test="personName != null">
                person_name = #{personName,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="sysuserId != null">
                sysuser_id = #{sysuserId,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ht70605.entity.Checkoutbill">
        update checkoutbill
        set dictionary_id = #{dictionaryId,jdbcType=VARCHAR},
        bill_code = #{billCode,jdbcType=VARCHAR},
        res_department_id = #{resDepartmentId,jdbcType=VARCHAR},
        des_department_id = #{desDepartmentId,jdbcType=VARCHAR},
        result = #{result,jdbcType=VARCHAR},
        person_name = #{personName,jdbcType=VARCHAR},
        info = #{info,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        sysuser_id = #{sysuserId,jdbcType=VARCHAR},
        location_id = #{locationId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <resultMap extends="BaseResultMap" id="BaseResultMapSelect" type="com.ht70605.entity.CheckoutbillSelect">
        <result column="res_department_name" jdbcType="VARCHAR" property="resDepartmentName"/>
        <result column="des_department_name" jdbcType="VARCHAR" property="desDepartmentName"/>
        <result column="locInfo" jdbcType="VARCHAR" property="locInfo"/>
        <result column="sysUserName" jdbcType="VARCHAR" property="sysUserName"/>
    </resultMap>
    <!--模糊查询 -->
    <select id="selectPageListUseDyc" parameterType="page" resultMap="BaseResultMapSelect">
        SELECT DISTINCT
        cout.id,
        cout.dictionary_id,
        cout.bill_code,
        cout.res_department_id,
        cout.des_department_id,
        cout.result,
        cout.info,
        cout.create_time,
        cout.update_time,
        cout.status,
        cout.person_name,
        cout.location_id,
        if(l.locInfo IS NULL, "", l.locInfo) AS locInfo,
        cout.sysUser_id,
        s.name as sysUserName,
        resdep.dep_name AS res_department_name,
        desdep.dep_name AS des_department_name
        FROM checkoutbill cout LEFT JOIN checkoutbillitem c ON cout.id = c.checkOutBill_id
        LEFT JOIN product p ON p.id = c.product_id
        LEFT JOIN dictionary d ON p.dictionary_id = d.id
        LEFT JOIN application a ON a.id = p.application_id
        LEFT JOIN location l ON l.id = cout.location_id
        LEFT JOIN sysuser s ON s.id = cout.sysUser_id
        LEFT JOIN department resdep ON resdep.id = cout.res_department_id
        LEFT JOIN department desdep ON desdep.id = cout.des_department_id
        <where>
            <if test="paramEntity.id!=null">AND cout.id like
                concat(concat('%',#{paramEntity.id}),'%')
            </if>
            <if test="paramEntity.productDictionaryId!=null">AND p.dictionary_id like
                concat(concat('%',#{paramEntity.productDictionaryId}),'%')
            </if>
            <if test="paramEntity.productModel!=null">AND p.model like
                concat(concat('%',#{paramEntity.productModel}),'%')
            </if>
            <if test="paramEntity.applicationId!=null">AND p.application_id like
                concat(concat('%',#{paramEntity.applicationId}),'%')
            </if>
            <if test="paramEntity.sysuserId!=null">AND cout.sysUser_id like
                concat(concat('%',#{paramEntity.sysuserId}),'%')
            </if>
            <if test="paramEntity.status!=null">AND c.status like concat(concat('%',#{paramEntity.status}),'%')
            </if>
            <if test="paramEntity.result!=null">AND cout.result like
                concat(concat('%',#{paramEntity.result}),'%')
            </if>
            <if test="paramEntity.startTime!=null and paramEntity.startTime!=''">and
                left(cout.update_time, 10)>=#{paramEntity.startTime}
            </if>
            <if test="paramEntity.endTime!=null and paramEntity.endTime!=''">and
                #{paramEntity.endTime}>=left(cout.update_time, 10)
            </if>
            <if test="paramEntity.id!=null">AND cout.id like
                concat(concat('%',#{paramEntity.id}),'%')
            </if>
        </where>
        ORDER BY
        create_time DESC
        <if test="pageSize!=null">limit #{start},#{pageSize}
        </if>
    </select>
    <!--模糊查询条数 -->
    <select id="selectPageCountUseDyc" parameterType="page" resultType="Integer">
        SELECT COUNT(*) FROM
        (SELECT DISTINCT
        cout.id
        FROM checkoutbill cout LEFT JOIN checkoutbillitem c ON cout.id = c.checkOutBill_id
        LEFT JOIN product p ON p.id = c.product_id
        LEFT JOIN dictionary d ON p.dictionary_id = d.id
        LEFT JOIN application a ON a.id = p.application_id
        LEFT JOIN location l ON l.id = p.location_id
        LEFT JOIN sysuser s ON s.id = p.sysUser_id
        LEFT JOIN department resdep ON resdep.id = cout.res_department_id
        LEFT JOIN department desdep ON desdep.id = cout.des_department_id
        <where>
            <if test="paramEntity.id!=null">AND cout.id like
                concat(concat('%',#{paramEntity.id}),'%')
            </if>
            <if test="paramEntity.productDictionaryId!=null">AND p.dictionary_id like
                concat(concat('%',#{paramEntity.productDictionaryId}),'%')
            </if>
            <if test="paramEntity.productModel!=null">AND p.model like
                concat(concat('%',#{paramEntity.productModel}),'%')
            </if>
            <if test="paramEntity.applicationId!=null">AND p.application_id like
                concat(concat('%',#{paramEntity.applicationId}),'%')
            </if>
            <if test="paramEntity.status!=null">AND c.status like concat(concat('%',#{paramEntity.status}),'%')
            </if>
            <if test="paramEntity.sysuserId!=null">AND cout.sysUser_id like
                concat(concat('%',#{paramEntity.sysuserId}),'%')
            </if>
            <if test="paramEntity.result!=null">AND cout.result like
                concat(concat('%',#{paramEntity.result}),'%')
            </if>
            <if test="paramEntity.startTime!=null and paramEntity.startTime!=''">and
                left(cout.update_time, 10)>=#{paramEntity.startTime}
            </if>
            <if test="paramEntity.endTime!=null and paramEntity.endTime!=''">and
                #{paramEntity.endTime}>=left(cout.update_time, 10)
            </if>
            <if test="paramEntity.id!=null">AND cout.id like
                concat(concat('%',#{paramEntity.id}),'%')
            </if>
        </where>
        ) AS t
    </select>
</mapper>