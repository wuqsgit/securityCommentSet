<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

       <!--配置数据源 c3p0连接池 优点多数据库连接，断线自动重连-->
       <bean id="ComboPooledDataSourceID" class="com.mchange.v2.c3p0.ComboPooledDataSource"
             destroy-method="close" >
              <property name="driverClass" value="com.mysql.jdbc.Driver" />
              <property name="jdbcUrl" value="jdbc:mysql://192.168.1.23:3306/test2?useUnicode=true&amp;characterEncoding=UTF-8" />
              <property name="user" value="root" />
              <property name="password" value="123456" />
       </bean>

       <!--配置multipartFile-->
       <bean id="multipartResolver"
             class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <property name="defaultEncoding" value="utf-8"/>
              <property name="maxInMemorySize" value="20"/>
              <property name="maxUploadSize" value="10000000"/>
       </bean>

       <!--配置 Session工厂 SqlSessionFactoryBean 加载mybatis配置文件-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="configLocation" value="classpath:mybatis.xml"></property>
              <property name="dataSource" ref="ComboPooledDataSourceID"></property>
              <!--配置扫描加载SQL映射文件,记得去掉mybatis的配置 -->
              <property name="mapperLocations" value="classpath:com/ht70605/dao/*.xml"></property>
       </bean>

       <!--配置Mybatis的事务管理器 即jdbc的事务管理 -->
       <bean id="TransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="ComboPooledDataSourceID"></property>
       </bean>

       <!--配置事务通知,即让那些方法需要事务支持-->
       <tx:advice id="advice" transaction-manager="TransactionManager">
              <tx:attributes>
                     <!-- 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误 -->
                     <tx:method name="insert*" propagation="REQUIRED"
                                rollback-for="Exception" />
                     <tx:method name="update*" propagation="REQUIRED"
                                rollback-for="Exception" />
                     <tx:method name="delete*" propagation="REQUIRED"
                                rollback-for="Exception" />
                     <tx:method name="*" propagation="SUPPORTS" />
              </tx:attributes>
       </tx:advice>


       <!--配置SessionTemplate ，已封装了繁琐的数据操作-->
       <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
              <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
       </bean>

       <!--配置事务切面,即让那些包下的类需要事务 参数不限
           后边要把事务边界定在service层
       -->
       <aop:config>
              <aop:advisor advice-ref="advice"
                           pointcut="execution(* com.ht70605.service.impl.*.*(..))" />
       </aop:config>

       <!--自动扫描组件,要把Controller过滤掉。他们在sping-mvc.xml中配置，如果不去除会影响事务管理 -->
       <context:component-scan base-package="com.ht70605">
              <context:exclude-filter type="annotation"
               expression="org.springframework.stereotype.Controller" />
       </context:component-scan>

       <!--配置转换器，对于在basePackage设置的包下的接口类如果接口类的全类名在Mapper.xml文件
       和定义过命名空间一致将被转换成sping的Bean,在调用的地方通过Autowired方式将可以注入接口实例(自动生成实例Dao)-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="sqlSessionFactory" ref="sqlSessionFactory" />
              <property name="basePackage" value="com.ht70605.dao" />
       </bean>
</beans>
